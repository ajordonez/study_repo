#This query is the master query for the motorcycle accident project, this will clean, group, and join all 3 tables into one table to preform calculations on. 

#The following will be cleaning the data before joining them together
WITH 
cleaned_crashes AS (
  SELECT *
  FROM `ferrous-thought-409502.insurance.crashes`
  WHERE
    `CRASH DATE` BETWEEN '2020-01-01' AND '2024-12-01'
    AND BOROUGH IS NOT NULL
    AND `ZIP CODE` IS NOT NULL
    AND `ZIP CODE` > 10000
    AND COLLISION_ID IS NOT NULL
    AND `NUMBER OF PERSONS KILLED` IS NOT NULL
    AND `NUMBER OF PERSONS INJURED` IS NOT NULL
),

cleaned_vehicles AS (
    SELECT 
        COLLISION_ID,
        DRIVER_LICENSE_STATUS,
        VEHICLE_TYPE,
        DRIVER_SEX,
        CASE 
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%HONDA%' THEN 'HONDA'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%YAMA%' THEN 'YAMAHA'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%SUZU%' THEN 'SUZUKI'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%HARLEY%' THEN 'HARLEY DAVIDSON'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%KAWAS%' THEN 'KAWASAKI'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%BMW%' THEN 'BMW'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%DUCAT%' THEN 'DUCATI'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%VES%' THEN 'VESPA'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%MOPED%' THEN 'UNKNOWN'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) LIKE '%MOTORCYCLE%' THEN 'UNKNOWN'
            WHEN UPPER(TRIM(VEHICLE_MAKE)) IS NULL OR UPPER(TRIM(VEHICLE_MAKE)) = '' THEN 'UNKNOWN'
            ELSE 'OTHER'
        END AS CLEANED_VEHICLE_MAKE
    FROM `ferrous-thought-409502.insurance.vehicles`
    WHERE 
        `CRASH_DATE` BETWEEN '2020-01-01' AND '2024-12-01'
        AND `VEHICLE_TYPE` IS NOT NULL
        AND TRIM(UPPER(`VEHICLE_TYPE`)) <> ''
        AND (UPPER(`VEHICLE_TYPE`) LIKE "%MOTORCYCLE%"
        OR UPPER(`VEHICLE_TYPE`) LIKE "%MOPED"
        OR UPPER(`VEHICLE_TYPE`) = "MOTORBIKE")
        AND DRIVER_SEX IS NOT NULL
        AND DRIVER_LICENSE_STATUS IS NOT NULL
        AND VEHICLE_MAKE IS NOT NULL
        AND COLLISION_ID IS NOT NULL
),

cleaned_persons AS (
  SELECT *
  FROM `ferrous-thought-409502.insurance.persons`
  WHERE
    `CRASH_DATE` BETWEEN '2020-01-01' AND '2024-12-01'
    AND PERSON_TYPE IS NOT NULL
    AND PERSON_AGE IS NOT NULL 
    AND PERSON_AGE >0 
    AND PERSON_AGE <150
    AND PERSON_SEX IS NOT NULL
    AND COLLISION_ID IS NOT NULL
    AND PERSON_TYPE = "Occupant"
    AND EMOTIONAL_STATUS IS NOT NULL
    AND POSITION_IN_VEHICLE LIKE "%Driver%"
    AND PERSON_INJURY IS NOT NULL
)

#Here we will begin the query with the cleaned data
SELECT 
  c.`CRASH DATE`,
  c.`CRASH TIME`,
  c.BOROUGH,
  c.`ZIP CODE`,
  c.`NUMBER OF PERSONS KILLED`,
  c.`NUMBER OF PERSONS INJURED`,
  c.`CONTRIBUTING FACTOR VEHICLE 1`,
  UPPER(TRIM(v.CLEANED_VEHICLE_MAKE)) AS VEHICLE_MAKE,
  v.DRIVER_LICENSE_STATUS,
  LOWER(v.VEHICLE_TYPE) AS VEHICLE_TYPE,
  p.PERSON_INJURY,
  p.PERSON_AGE,
  p.PERSON_SEX,
  COUNT(*) AS TOTAL_INCIDENTS

#Here we will join the 3 tables together with COLLISION_ID
FROM 
  cleaned_crashes c
  INNER JOIN cleaned_vehicles v
    ON c.COLLISION_ID = v.COLLISION_ID
  INNER JOIN cleaned_persons p
    ON c.COLLISION_ID = p.COLLISION_ID
GROUP BY 
  c.`CRASH DATE`,
  c.`CRASH TIME`,
  c.BOROUGH,
  c.`ZIP CODE`,
  c.`NUMBER OF PERSONS KILLED`,
  c.`NUMBER OF PERSONS INJURED`,
  c.`CONTRIBUTING FACTOR VEHICLE 1`,
  v.CLEANED_VEHICLE_MAKE,
  v.DRIVER_LICENSE_STATUS,
  v.VEHICLE_TYPE,
  p.PERSON_INJURY,
  p.PERSON_AGE,
  p.PERSON_SEX

